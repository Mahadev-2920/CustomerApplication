@using System.Globalization;
@model IEnumerable<CustomerApp.Models.Customer>

@{
    ViewData["Title"] = "Customer List";
    var errorMessage = TempData["ErrorMessage"]?.ToString();
    var SuccessMessage = TempData["SuccessMessage"]?.ToString();

}
<h3>@ViewData["Title"]</h3>
@if (!string.IsNullOrWhiteSpace(SuccessMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <b>Success: </b>@SuccessMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="close"></button>
    </div>
}
else if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <b>Erro: </b>@errorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="close"></button>
    </div>
}

<table class="table" id="tblCustomer">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.firstname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.lastname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.phone_Number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.country_code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.balance)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.firstname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.lastname)
                </td>
                <td>
                    <a href="">@Html.DisplayFor(modelItem => item.email)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.phone_Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.country_code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.balance)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new {  id=item.id  }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.id  })
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    debugger;
    var table = document.getElementById("tblCustomer");
    var rowsPerPage = 10;
    var rowCount = table.rows.length;
    var tableHead = table.rows[0].firstElementChild.tagName === "TH";
    var tr = [];
    var i, ii, j = (tableHead) ? 1 : 0;
    var th = (tableHead ? table.rows[(0)].outerHTML : "");
    var pageCount = Math.ceil(table.rows.length / rowsPerPage);

    if (pageCount > 1) {
        for (i = j, ii = 0; i < rowCount; i++, ii++) {
            tr[ii] = table.rows[i].outerHTML;
        }
        table.insertAdjacentHTML("afterend", "<br><div  id='buttons'></div");
        sort(1);
    }

    function sort(page) {
        var rows = th, s = ((rowsPerPage * page) - rowsPerPage);
        for (i = s; i < (s + rowsPerPage) && i < tr.length; i++)
            rows += tr[i];
        table.innerHTML = rows;
        document.getElementById("buttons").innerHTML = pageButtons(pageCount, page);
    }

    function pageButtons(pageCount, current) {
        debugger;
        var prevButton = (current == 1) ? "disabled" : "";
        var nextButton = (current == pageCount) ? "disabled" : "";
        var buttons = "<a href='/Customer/Create'>Create New</a><br><input class='clsButton' type='button' value='<<";
        for (i = pageCount; i <= 1; i--) {
            buttons += "";
        }
        buttons += "' onclick='sort(" + (current - 1) + ")' " + prevButton + ">";

        buttons += "<input class='clsButton' type='button' value='>>";
        for (i = 1; i <= pageCount; i++) {
            buttons += "";
        }
        buttons += "' onclick='sort(" + (current + 1) + ")' " + nextButton + ">";
        return buttons;
    }
</script>

